<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.system.mapper.EmployeeMapper">
    
    <resultMap type="Employee" id="EmployeeResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="phone"    column="phone"    />
        <result property="age"    column="age"    />
        <result property="email"    column="email"    />
        <result property="address"    column="address"    />
        <result property="position"    column="position"    />
        <result property="department"    column="department"    />
        <result property="hireDate"    column="hire_date"    />
        <result property="salary"    column="salary"    />
    </resultMap>

    <sql id="selectEmployeeVo">
        select id, name, phone, age, email, address, position, department, hire_date, salary from employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="age != null "> and age &gt;= #{age}</if>
            <if test="department != null  and department != ''"> and department = #{department}</if>
            <if test="hireDate != null "> and hire_date &lt;= #{hireDate}</if>
            <if test="salary != null "> and salary &gt;= #{salary}</if>
        </where>
    </select>
    
    <select id="selectEmployeeById" parameterType="Long" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEmployee" parameterType="Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="phone != null">phone,</if>
            <if test="age != null">age,</if>
            <if test="email != null">email,</if>
            <if test="address != null">address,</if>
            <if test="position != null">position,</if>
            <if test="department != null">department,</if>
            <if test="hireDate != null">hire_date,</if>
            <if test="salary != null">salary,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="phone != null">#{phone},</if>
            <if test="age != null">#{age},</if>
            <if test="email != null">#{email},</if>
            <if test="address != null">#{address},</if>
            <if test="position != null">#{position},</if>
            <if test="department != null">#{department},</if>
            <if test="hireDate != null">#{hireDate},</if>
            <if test="salary != null">#{salary},</if>
         </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="age != null">age = #{age},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="position != null">position = #{position},</if>
            <if test="department != null">department = #{department},</if>
            <if test="hireDate != null">hire_date = #{hireDate},</if>
            <if test="salary != null">salary = #{salary},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmployeeById" parameterType="Long">
        delete from employee where id = #{id}
    </delete>

    <delete id="deleteEmployeeByIds" parameterType="String">
        delete from employee where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>