<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.business.mapper.CustomerInfoMapper">
    
    <resultMap type="CustomerInfo" id="CustomerInfoResult">
        <result property="id"    column="id"    />
        <result property="customerName"    column="customer_name"    />
        <result property="phone"    column="phone"    />
        <result property="gender"    column="gender"    />
        <result property="entryUser"    column="entry_user"    />
        <result property="entryTime"    column="entry_time"    />
    </resultMap>

    <sql id="selectCustomerInfoVo">
        select id, customer_name, phone, gender, entry_user, entry_time from customer_info
    </sql>

    <select id="selectCustomerInfoList" parameterType="CustomerInfo" resultMap="CustomerInfoResult">
        <include refid="selectCustomerInfoVo"/>
        <where>  
            <if test="customerName != null  and customerName != ''"> and customer_name like concat('%', #{customerName}, '%')</if>
            <if test="entryUser != null  and entryUser != ''"> and entry_user = #{entryUser}</if>
            <if test="params.beginEntryTime != null and params.beginEntryTime != '' and params.endEntryTime != null and params.endEntryTime != ''"> and entry_time between #{params.beginEntryTime} and #{params.endEntryTime}</if>
        </where>
    </select>
    
    <select id="selectCustomerInfoById" parameterType="Long" resultMap="CustomerInfoResult">
        <include refid="selectCustomerInfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCustomerInfo" parameterType="CustomerInfo" useGeneratedKeys="true" keyProperty="id">
        insert into customer_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerName != null">customer_name,</if>
            <if test="phone != null">phone,</if>
            <if test="gender != null">gender,</if>
            <if test="entryUser != null">entry_user,</if>
            <if test="entryTime != null">entry_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerName != null">#{customerName},</if>
            <if test="phone != null">#{phone},</if>
            <if test="gender != null">#{gender},</if>
            <if test="entryUser != null">#{entryUser},</if>
            <if test="entryTime != null">#{entryTime},</if>
         </trim>
    </insert>

    <update id="updateCustomerInfo" parameterType="CustomerInfo">
        update customer_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerName != null">customer_name = #{customerName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="entryUser != null">entry_user = #{entryUser},</if>
            <if test="entryTime != null">entry_time = #{entryTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCustomerInfoById" parameterType="Long">
        delete from customer_info where id = #{id}
    </delete>

    <delete id="deleteCustomerInfoByIds" parameterType="String">
        delete from customer_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>